*** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    × should exist and be executable (8 ms)
    × should have all TODO comments removed (1 ms)
    × should call `new Promise()` (1 ms)
    × `resolve()` should be called with a one argument (3 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when the die settles successfully (1 ms)
    × should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      32 |
      33 |   test('should exist and be executable', () => {
    > 34 |     expect(exported).toBeDefined();
         |                      ^
      35 |   });
      36 |
      37 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:34:22)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    expect(received).toBeDefined()

    Received: undefined

      51 |   test('should resolve when the die settles successfully', () => {
      52 |     expect.assertions(3);
    > 53 |     expect(exported).toBeDefined();
         |                      ^
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      56 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:53:22)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      74 |   test('should reject with an Error when the die rolls off the table', async () => {
      75 |     expect.assertions(3);
    > 76 |     expect(exported).toBeDefined();
         |                      ^
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      79 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:76:22)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       7 failed, 7 total
Snapshots:   0 total
Time:        1.448 s, estimated 2 s
Ran all test suites matching /ex3-rollDie.test.js/i.
*** ESLint Report ***

ex3-rollDie.js
  51:1  error  Parsing error: Unexpected token function

✖ 1 problem (1 error, 0 warnings)

