2022-02-04 06:11:07 info: ---------------------------------------
2022-02-04 06:11:07 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-02-04 06:11:07 info: ---------------------------------------
2022-02-04 06:11:14 info: All unit tests passed.
2022-02-04 06:11:22 info: All steps were completed successfully
2022-02-04 06:12:00 info: -------------------------------------------------
2022-02-04 06:12:00 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:12:00 info: -------------------------------------------------
2022-02-04 06:12:05 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    √ should call new Promise() (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (3 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (3 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (100) should return a rejected promise with an Error object (2 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.159 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:12:42 info: -------------------------------------------------
2022-02-04 06:12:42 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:12:42 info: -------------------------------------------------
2022-02-04 06:12:47 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed
    √ `checkDoubleDigits` should not contain unneeded console.log calls (2 ms)
    √ should call new Promise() (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (5 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!"
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.41 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:17:38 info: -------------------------------------------------
2022-02-04 06:17:38 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:17:38 info: -------------------------------------------------
2022-02-04 06:17:44 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    × should exist and be executable (4 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    × should call new Promise()
    × `resolve()` should be called with a one argument (2 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (2 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        1.571 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:17:48 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  28:2  error  Parsing error: Unexpected token }

✖ 1 problem (1 error, 0 warnings)


2022-02-04 06:18:18 info: -------------------------------------------------
2022-02-04 06:18:18 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:18:18 info: -------------------------------------------------
2022-02-04 06:18:24 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    × should exist and be executable (5 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    × should call new Promise() (1 ms)
    × `resolve()` should be called with a one argument (2 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should be a function that takes a single argument
    × (9) should return a rejected promise with an Error object
    × (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (99) should return a promise that resolves to "This is a double digit number!"
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        1.604 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:18:28 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  28:2  error  Parsing error: Unexpected token }

✖ 1 problem (1 error, 0 warnings)


2022-02-04 06:18:45 info: -------------------------------------------------
2022-02-04 06:18:45 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:18:45 info: -------------------------------------------------
2022-02-04 06:18:52 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    × should exist and be executable (4 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    × should call new Promise() (1 ms)
    × `resolve()` should be called with a one argument (3 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should be a function that takes a single argument
    × (9) should return a rejected promise with an Error object
    × (10) should return a promise that resolves to "This is a double digit number!"
    × (99) should return a promise that resolves to "This is a double digit number!" (16 ms)
    × (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        1.669 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:18:56 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  28:2  error  Parsing error: Unexpected token }

✖ 1 problem (1 error, 0 warnings)


2022-02-04 06:19:17 info: -------------------------------------------------
2022-02-04 06:19:17 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:19:17 info: -------------------------------------------------
2022-02-04 06:19:22 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    √ should call new Promise()
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (3 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (3 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object (2 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.149 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:20:04 info: -------------------------------------------------
2022-02-04 06:20:04 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:20:04 info: -------------------------------------------------
2022-02-04 06:20:10 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (4 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (3 ms)
    √ should call new Promise() (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (5 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (3 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.39 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:22:24 info: -------------------------------------------------
2022-02-04 06:22:24 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:22:24 info: -------------------------------------------------
2022-02-04 06:22:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    × should exist and be executable (6 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    × should call new Promise() (1 ms)
    × `resolve()` should be called with a one argument (3 ms)
    × `reject()` should be called with a one argument
    × should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (1 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        1.651 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:22:34 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  16:5  error  Parsing error: Identifier 'number' has already been declared

✖ 1 problem (1 error, 0 warnings)


2022-02-04 06:23:31 info: -------------------------------------------------
2022-02-04 06:23:31 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:23:31 info: -------------------------------------------------
2022-02-04 06:23:36 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (2 ms)
    √ should call new Promise()
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (8 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.318 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:25:01 info: -------------------------------------------------
2022-02-04 06:25:01 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:25:01 info: -------------------------------------------------
2022-02-04 06:25:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    × should call new Promise() (2 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (1 ms)
    × (10) should return a promise that resolves to "This is a double digit number!"
    × (99) should return a promise that resolves to "This is a double digit number!"
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: undefined is not a promise
        at Promise (<anonymous>)

      14 | ------------------------------------------------------------------------------*/
      15 | function checkDoubleDigits(number) {
    > 16 |   const promising = Promise((resolve, reject) => {
         |                     ^
      17 |     if (number < 99 || number > 10) {
      18 |       resolve("This is a double digit number!");
      19 |     } else {

      at checkDoubleDigits (3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:16:21)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    TypeError: undefined is not a promise
        at Promise (<anonymous>)

      14 | ------------------------------------------------------------------------------*/
      15 | function checkDoubleDigits(number) {
    > 16 |   const promising = Promise((resolve, reject) => {
         |                     ^
      17 |     if (number < 99 || number > 10) {
      18 |       resolve("This is a double digit number!");
      19 |     } else {

      at checkDoubleDigits (3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:16:21)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:73:21)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: undefined is not a promise
        at Promise (<anonymous>)

      14 | ------------------------------------------------------------------------------*/
      15 | function checkDoubleDigits(number) {
    > 16 |   const promising = Promise((resolve, reject) => {
         |                     ^
      17 |     if (number < 99 || number > 10) {
      18 |       resolve("This is a double digit number!");
      19 |     } else {

      at checkDoubleDigits (3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:16:21)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: undefined is not a promise
        at Promise (<anonymous>)

      14 | ------------------------------------------------------------------------------*/
      15 | function checkDoubleDigits(number) {
    > 16 |   const promising = Promise((resolve, reject) => {
         |                     ^
      17 |     if (number < 99 || number > 10) {
      18 |       resolve("This is a double digit number!");
      19 |     } else {

      at checkDoubleDigits (3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:16:21)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 6 passed, 11 total
Snapshots:   0 total
Time:        1.305 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-04 06:25:10 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  16:21  error  A function with a name starting with an uppercase letter should only be used as a constructor  new-cap

✖ 1 problem (1 error, 0 warnings)


2022-02-04 06:25:37 info: -------------------------------------------------
2022-02-04 06:25:37 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-04 06:25:37 info: -------------------------------------------------
2022-02-04 06:25:43 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (2 ms)
    √ should call new Promise() (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (4 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (3 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object (2 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.479 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-07 04:24:40 info: -------------------------------------------------
2022-02-07 04:24:40 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-07 04:24:40 info: -------------------------------------------------
2022-02-07 04:24:45 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (3 ms)
    √ should call new Promise()
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (4 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.19 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-07 04:24:48 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  23:3  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 1 problem (0 errors, 1 warning)


2022-02-07 04:25:52 info: -------------------------------------------------
2022-02-07 04:25:52 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-07 04:25:52 info: -------------------------------------------------
2022-02-07 04:25:57 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    √ should call new Promise()
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (3 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.121 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-07 04:26:58 info: -------------------------------------------------
2022-02-07 04:26:58 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-07 04:26:58 info: -------------------------------------------------
2022-02-07 04:27:02 info: All unit tests passed.
2022-02-07 04:27:09 info: All steps were completed successfully
2022-02-07 04:28:03 info: -------------------------------------------------
2022-02-07 04:28:03 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-07 04:28:03 info: -------------------------------------------------
2022-02-07 04:28:08 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    √ should call new Promise()
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument
    × (9) should return a rejected promise with an Error object (2 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:12)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "This is a double digit number!"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      94 |   });
      95 | });
      96 |

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.957 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-07 04:28:44 info: -------------------------------------------------
2022-02-07 04:28:44 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-07 04:28:44 info: -------------------------------------------------
2022-02-07 04:28:48 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (4 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    √ should call new Promise()
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument (1 ms)
    √ (9) should return a rejected promise with an Error object (3 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (3 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    √ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Expected a double digit number but got 10]

      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
    > 75 |     return expect(promise).resolves.toEqual(
         |            ^
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );
      78 |   });

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:75:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Expected a double digit number but got 99]

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |            ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at expect (node_modules/expect/build/index.js:178:15)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.079 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-02-07 04:29:19 info: -------------------------------------------------
2022-02-07 04:29:19 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-02-07 04:29:19 info: -------------------------------------------------
2022-02-07 04:29:23 info: All unit tests passed.
2022-02-07 04:29:30 info: All steps were completed successfully
2022-02-07 04:36:25 info: ---------------------------------------
2022-02-07 04:36:25 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-02-07 04:36:25 info: ---------------------------------------
2022-02-07 04:36:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (4 ms)
    × should have all TODO comments removed (3 ms)
    √ should call `new Promise()`
    × `resolve()` should be called with a one argument (2 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when the die settles successfully (2 ms)
    √ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        0.978 s, estimated 2 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-02-07 04:36:32 error: *** ESLint Report ***

ex3-rollDie.js
  56:2  error  Unnecessary semicolon  no-extra-semi

✖ 1 problem (1 error, 0 warnings)
  1 error and 0 warnings potentially fixable with the `--fix` option.


2022-02-07 04:38:28 info: ---------------------------------------
2022-02-07 04:38:28 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-02-07 04:38:28 info: ---------------------------------------
2022-02-07 04:38:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    √ should call `new Promise()` (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when the die settles successfully (2 ms)
    √ should reject with an Error when the die rolls off the table (2 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        1.015 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-02-07 04:38:35 error: *** ESLint Report ***

ex3-rollDie.js
  56:2  error  Unnecessary semicolon  no-extra-semi

✖ 1 problem (1 error, 0 warnings)
  1 error and 0 warnings potentially fixable with the `--fix` option.


2022-02-07 04:40:56 info: ---------------------------------------
2022-02-07 04:40:56 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-02-07 04:40:56 info: ---------------------------------------
2022-02-07 04:41:00 info: All unit tests passed.
2022-02-07 04:41:06 info: All steps were completed successfully
2022-02-08 04:31:39 info: --------------------------------------------
2022-02-08 04:31:39 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-02-08 04:31:39 info: --------------------------------------------
2022-02-08 04:31:47 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (5 ms)
    × should have all TODO comments removed (5 ms)
    √ `rollDice` should not contain unneeded console.log calls (2 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()` (2 ms)
    √ should resolve when all dice settle successfully (18 ms)
    √ should reject with an Error when a die rolls off the table (76 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        1.87 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-02-08 04:34:09 info: --------------------------------------------
2022-02-08 04:34:09 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-02-08 04:34:09 info: --------------------------------------------
2022-02-08 04:34:15 info: All unit tests passed.
2022-02-08 04:34:25 info: All steps were completed successfully
2022-02-08 04:34:44 info: ---------------------------------------
2022-02-08 04:34:45 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-02-08 04:34:45 info: ---------------------------------------
2022-02-08 04:34:50 info: All unit tests passed.
2022-02-08 04:34:58 info: All steps were completed successfully
2022-02-08 04:38:54 info: ----------------------------------------------
2022-02-08 04:38:54 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-02-08 04:38:54 info: ----------------------------------------------
2022-02-08 04:39:00 info: All unit tests passed.
2022-02-08 04:39:09 info: All steps were completed successfully
